{"version":3,"file":"static/js/304.e8c2df67.chunk.js","mappings":"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","sources":["components/common/DataTable.jsx","components/common/Error.jsx","components/dashboard/DataInsights.jsx","components/common/ChartContainer.jsx","components/layout/Sidebar.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useMemo, useEffect } from 'react';\r\nimport { useDashboardContext } from '../../context/DashboardContext';\r\nimport './DataTable.css'; // Import CSS for styling\r\n\r\nconst PivotTable = () => {\r\n  const { state } = useDashboardContext();\r\n  const [rowField, setRowField] = useState(null);\r\n  const [valueField, setValueField] = useState(null);\r\n\r\n  const allFields = ['date', 'supplier', 'region', 'amount'];\r\n\r\n  // Automatically adjust value field based on row field selection\r\n  useEffect(() => {\r\n    if (!rowField) {\r\n      setValueField(null);\r\n    } else if (!valueField) {\r\n      setValueField(allFields.find(field => field !== rowField));\r\n    }\r\n  }, [rowField, valueField, allFields]);\r\n\r\n  // Determine column fields based on selections\r\n  const columnFields = useMemo(() => {\r\n    return allFields.filter(field => field !== rowField && field !== valueField);\r\n  }, [rowField, valueField]);\r\n\r\n  // Create pivot table data\r\n  const pivotData = useMemo(() => {\r\n    if (!rowField || !valueField) {\r\n      return state.data;\r\n    }\r\n\r\n    const pivot = {};\r\n\r\n    state.data.forEach(item => {\r\n      const rowKey = item[rowField];\r\n      const colKey = columnFields.map(field => item[field]).join(' | ');\r\n\r\n      if (!pivot[rowKey]) {\r\n        pivot[rowKey] = {};\r\n      }\r\n\r\n      if (!pivot[rowKey][colKey]) {\r\n        pivot[rowKey][colKey] = \"\";\r\n      }\r\n\r\n      pivot[rowKey][colKey] += item[valueField];\r\n    });\r\n\r\n    return pivot;\r\n  }, [state.data, rowField, valueField, columnFields]);\r\n\r\n  // Get unique row and column headers\r\n  const rowHeaders = rowField ? Object.keys(pivotData) : [];\r\n  const columnHeaders = rowField ? Array.from(new Set(state.data.map(item => columnFields.map(field => item[field]).join(' | ')))) : columnFields;\r\n\r\n  return (\r\n    <div className=\"pivot-table-container\">\r\n      <div className=\"pivot-controls\">\r\n        <label>\r\n          Row\r\n          <select value={rowField || ''} onChange={(e) => setRowField(e.target.value || null)}>\r\n            <option value=\"\">None</option>\r\n            {allFields.map(field => (\r\n              <option key={field} value={field}>{field}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label>\r\n          Value\r\n          <select value={valueField || ''} onChange={(e) => setValueField(e.target.value || null)} style={{pointerEvents: !rowField ? 'none' : 'all'}}>\r\n            <option value=\"\">None</option>\r\n            {allFields.map(field => (\r\n              <option key={field} value={field}>{field}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"pivot-table-wrapper\">\r\n        <table className=\"pivot-table\">\r\n          <thead>\r\n            <tr>\r\n              {rowField && <th>{rowField}</th>}\r\n              {columnHeaders.map(col => (\r\n                <th key={col}>{col}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rowField ? (\r\n              rowHeaders.map(row => (\r\n                <tr key={row}>\r\n                  <td>{row}</td>\r\n                  {columnHeaders.map(col => (\r\n                    <td key={col}>{pivotData[row][col]}</td>\r\n                  ))}\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              state.data.map((item, index) => (\r\n                <tr key={index}>\r\n                  {columnFields.map(field => (\r\n                    <td key={field}>{item[field]}</td>\r\n                  ))}\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PivotTable;","import React from \"react\";\r\nimport \"./Error.css\"; \r\n\r\nconst ErrorMessage = ({ message }) => {\r\n  return (\r\n    <div className=\"error-container\">\r\n      <div className=\"error-box\">\r\n        <p className=\"error-text\">{message || \"Something went wrong!\"}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport ChartContainer from '../common/ChartContainer';\r\nimport { useDashboardContext } from '../../context/DashboardContext';\r\nimport { Sidebar } from '../layout/Sidebar';\r\nimport './DataInsights.css'; \r\nimport Loader from '../common/Loader';\r\nimport PivotTable from '../common/DataTable';\r\nimport ErrorMessage from '../common/Error';\r\n\r\nconst DataInsights = () => {\r\n  const defaultFilters = {\r\n    dateRange: ['2023-01-01', '2023-01-30'],\r\n    region: 'All',\r\n    supplier: 'All',\r\n    amountRange: { min: '', max: '' },\r\n    dimension: 'region'\r\n  };\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n  const { state, dispatch } = useDashboardContext();\r\n  const [show, setShow] = useState(0);\r\n\r\n  const updateFilters = (newFilters) => {\r\n    setFilters(prev => ({ ...prev, ...newFilters }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(show === 1) {\r\n      setShow(2)\r\n    }\r\n  }, [state])\r\n\r\n  const onChange = (isStart, value) => {\r\n    let temp = Array.from(filters.dateRange);\r\n    if(isStart) {\r\n      temp[0] = value;\r\n    } else {\r\n      temp[1] = value;\r\n    }\r\n    setFilters(prev => ({ ...prev, dateRange: temp }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"FETCH_DATA\", payload: filters });\r\n    if(show === 0)\r\n      setShow(1);\r\n  }, [filters, dispatch]);\r\n\r\n  // Prepare data for the bar chart (aggregated insights)\r\n  const barChartData = useMemo(() => {\r\n    const dimensionTotals = state.data.reduce((acc, item) => {\r\n      const key = item[filters.dimension];\r\n      acc[key] = (acc[key] || 0) + item.amount;\r\n      return acc;\r\n    }, {});\r\n\r\n    return {\r\n      labels: Object.keys(dimensionTotals),\r\n      datasets: [\r\n        {\r\n          label: `Total Procurement by ${filters.dimension.charAt(0).toUpperCase() + filters.dimension.slice(1)}`,\r\n          data: Object.values(dimensionTotals),\r\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\r\n        },\r\n      ],\r\n    };\r\n  }, [state.data, filters.dimension]);\r\n\r\n  return (\r\n    <>\r\n      {state.isLoading || show !== 2 ? <Loader /> : state.error ? <ErrorMessage message={'Service Unavailable!'} /> : \r\n      <div className=\"data-insights-page\">\r\n        <Sidebar\r\n          AnomaliesFilters={null}\r\n          dataInsightsFilters={{onChange, startDate: filters.dateRange[0], endDate: filters.dateRange[1], region: filters.region, setSelectedRegion: (region) => updateFilters({ region }), amountRange: filters.amountRange, setAmountRange: (range) => updateFilters({ amountRange: range }), selectedDimension: filters.dimension, setSelectedDimension: (dimension) => updateFilters({ dimension })}}\r\n          DashboardHomeFilters={null}\r\n        />\r\n        <div className=\"data-insights-content\">\r\n          <h2>Data Insights</h2>\r\n          <div className=\"chart-container\">\r\n            <ChartContainer\r\n              type=\"bar\"\r\n              data={barChartData}\r\n              options={{\r\n                responsive: true,\r\n                maintainAspectRatio: false\r\n              }}\r\n            />\r\n          </div>\r\n          <h3>Detailed Overview</h3>\r\n          <PivotTable />\r\n        </div>\r\n      </div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataInsights;","import React from 'react';\r\nimport { Bar, Line, Pie, Bubble } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  BarElement,\r\n} from 'chart.js';\r\n\r\n// Register the necessary components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  ArcElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst ChartContainer = ({ type, data, options }) => {\r\n  return (\r\n    <div style={{ width: '100%', height: '100%', minWidth: 600 }}>\r\n      {type === 'bar' && <Bar data={data} options={options} />}\r\n      {type === 'line' && <Line data={data} options={options} />}\r\n      {type === 'pie' && <Pie data={data} options={options} />}\r\n      {type === 'bubble' && <Bubble data={data} options={options} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartContainer;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Sidebar.css';\r\n\r\nconst AnomaliesFilters = ({onChange, startDate, endDate, region, setSelectedRegion, amountRange, setAmountRange, supplier, setSelectedSupplier}) => {\r\n  const [min, setMin] = useState(amountRange.min);\r\n  const [max, setMax] = useState(amountRange.max);\r\n  const [start, setStart] = useState(startDate);\r\n  const [end, setEnd] = useState(endDate);\r\n\r\n  useEffect(() => {\r\n    onChange( true, start)\r\n  }, [start])\r\n\r\n  useEffect(() => {\r\n    onChange( false, end)\r\n  }, [end])\r\n\r\n  return <div className=\"anomaliesFilters\">\r\n    <div>\r\n      <p>\r\n        Date Range Start\r\n      </p>\r\n      <input type='date' onChange={(e) => setStart(e.target.value)} value={start} />\r\n      <p>\r\n        Date Range End\r\n      </p>\r\n      <input type='date' onChange={(e) => setEnd(e.target.value)} value={end} />\r\n    </div>\r\n    <div>\r\n      <p>\r\n        Region\r\n      </p>\r\n      <select onChange={(e) => setSelectedRegion(e.target.value)} value={region}>\r\n        <option value=\"All\">All</option>\r\n        <option value=\"North America\">North America</option>\r\n        <option value=\"Europe\">Europe</option>\r\n        <option value=\"Asia\">Asia</option>\r\n      </select>\r\n    </div>\r\n    <div>\r\n      <p>\r\n        Supplier\r\n      </p>\r\n      <select onChange={(e) => setSelectedSupplier(e.target.value)} value={supplier}>\r\n        <option value=\"All\">All</option>\r\n        <option value=\"Supplier A\">Supplier A</option>\r\n        <option value=\"Supplier B\">Supplier B</option>\r\n        <option value=\"Supplier C\">Supplier C</option>\r\n        <option value=\"Supplier D\">Supplier D</option>\r\n      </select>\r\n    </div>\r\n    <div>\r\n      <p>\r\n        Amount Range\r\n      </p>\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Min\"\r\n        value={min}\r\n        onChange={(e) => setMin(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            setAmountRange({ ...amountRange, min: e.target.value ? parseFloat(e.target.value) : \"\" });\r\n          }\r\n        }}\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Max\"\r\n        value={max}\r\n        onChange={(e) => setMax(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            setAmountRange({ ...amountRange, max: e.target.value ? parseFloat(e.target.value) : \"\" })\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  </div>\r\n};\r\n\r\n// DataInsights-specific filters\r\nconst DataInsightsFilters = ({onChange, startDate, endDate, region, setSelectedRegion, amountRange, setAmountRange, selectedDimension, setSelectedDimension}) => {\r\n  const [min, setMin] = useState(amountRange.min);\r\n  const [max, setMax] = useState(amountRange.max);\r\n  const [start, setStart] = useState(startDate);\r\n  const [end, setEnd] = useState(endDate);\r\n\r\n  useEffect(() => {\r\n    onChange(true, start)\r\n  }, [start])\r\n\r\n  useEffect(() => {\r\n    onChange(false, end)\r\n  }, [end])\r\n\r\n  return <div className=\"dataInsightsFilters\">\r\n    <div>\r\n      <p>\r\n        Date Range Start\r\n      </p>\r\n      <input type='date' onChange={(e) => setStart(e.target.value)} value={start} />\r\n      <p>\r\n        Date Range End\r\n      </p>\r\n      <input type='date' onChange={(e) => setEnd(e.target.value)} value={end} />\r\n    </div>\r\n    <div>\r\n      <p>\r\n        Region\r\n      </p>\r\n      <select onChange={(e) => setSelectedRegion(e.target.value)} value={region}>\r\n        <option value=\"All\">All</option>\r\n        <option value=\"North America\">North America</option>\r\n        <option value=\"Europe\">Europe</option>\r\n        <option value=\"Asia\">Asia</option>\r\n      </select>\r\n    </div>\r\n    <div>\r\n      <p>\r\n        Amount Range\r\n      </p>\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Min\"\r\n        value={min}\r\n        onChange={(e) => setMin(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            setAmountRange({ ...amountRange, min: e.target.value ? parseFloat(e.target.value) : \"\" });\r\n          }\r\n        }}\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Max\"\r\n        value={max}\r\n        onChange={(e) => setMax(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            setAmountRange({ ...amountRange, max: e.target.value ? parseFloat(e.target.value) : \"\" })\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n    <div>\r\n      <p>\r\n        Select Dimension\r\n      </p>\r\n      <select\r\n        id=\"dimension-select\"\r\n        value={selectedDimension}\r\n        onChange={(e) => setSelectedDimension(e.target.value)}\r\n      >\r\n        <option value=\"region\">Region</option>\r\n        <option value=\"supplier\">Supplier</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n};\r\n\r\nexport const Sidebar = ({ anomaliesFilters, dataInsightsFilters, DashboardHomeFilters }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleSidebar = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const renderFilters = () => {\r\n    switch (window.location.pathname) {\r\n      case '/supply-chain-dashboard/anomalies':\r\n        return <AnomaliesFilters {...anomaliesFilters} />;\r\n      case '/supply-chain-dashboard/data-insights':\r\n        return <DataInsightsFilters {...dataInsightsFilters} />;\r\n      case '/supply-chain-dashboard':\r\n        return <DashboardHomeFilters />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`sidebar-container ${isOpen ? 'open' : ''}`}>\r\n      <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n        {!isOpen ? \r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-funnel-fill\" viewBox=\"0 0 16 16\">\r\n          <path d=\"M1.5 1.5A.5.5 0 0 1 2 1h12a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.128.334L10 8.692V13.5a.5.5 0 0 1-.342.474l-3 1A.5.5 0 0 1 6 14.5V8.692L1.628 3.834A.5.5 0 0 1 1.5 3.5z\"/>\r\n        </svg>\r\n        : \r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-x-lg\" viewBox=\"0 0 16 16\">\r\n          <path d=\"M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z\"/>\r\n        </svg>\r\n        }\r\n      </button>\r\n      <aside className=\"sidebar\">\r\n        <h3>Filters</h3>\r\n        <div className=\"filter-group\">\r\n          {renderFilters()}\r\n        </div>\r\n        {/* Additional filters can be added here */}\r\n      </aside>\r\n    </div>\r\n  );\r\n};"],"names":["PivotTable","state","useDashboardContext","rowField","setRowField","useState","valueField","setValueField","allFields","useEffect","find","field","columnFields","useMemo","filter","pivotData","data","pivot","forEach","item","rowKey","colKey","map","join","rowHeaders","Object","keys","columnHeaders","Array","from","Set","_jsxs","className","children","value","onChange","e","target","_jsx","style","pointerEvents","col","row","index","_ref","message","DataInsights","filters","setFilters","dateRange","region","supplier","amountRange","min","max","dimension","dispatch","show","setShow","updateFilters","newFilters","prev","type","payload","barChartData","dimensionTotals","reduce","acc","key","amount","labels","datasets","label","charAt","toUpperCase","slice","values","backgroundColor","_Fragment","isLoading","Loader","error","ErrorMessage","Sidebar","AnomaliesFilters","dataInsightsFilters","isStart","temp","startDate","endDate","setSelectedRegion","setAmountRange","range","selectedDimension","setSelectedDimension","DashboardHomeFilters","ChartContainer","options","responsive","maintainAspectRatio","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","ArcElement","BarElement","Title","Tooltip","Legend","width","height","minWidth","Bar","Line","Pie","Bubble","setSelectedSupplier","setMin","setMax","start","setStart","end","setEnd","placeholder","onKeyDown","parseFloat","DataInsightsFilters","_ref2","id","_ref3","anomaliesFilters","isOpen","setIsOpen","onClick","toggleSidebar","xmlns","fill","viewBox","d","renderFilters","window","location","pathname"],"sourceRoot":""}