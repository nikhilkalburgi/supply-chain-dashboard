{"version":3,"file":"static/js/58.54db6915.chunk.js","mappings":"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","sources":["../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js"],"sourcesContent":["import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS<TType, TData, TLabel> | null>(null);\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n"],"names":["defaultDatasetIdKey","reforwardRef","ref","value","current","setLabels","currentData","nextLabels","labels","setDatasets","nextDatasets","datasetIdKey","arguments","length","addedDatasets","datasets","map","nextDataset","currentDataset","find","dataset","data","includes","push","Object","assign","cloneData","nextData","ChartComponent","props","height","width","redraw","type","options","plugins","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","destroy","useEffect","chart","nextOptions","setOptions","config","setTimeout","update","React","role","Chart","forwardRef","createTypedChart","registerables","register","Line","LineController","Bar","BarController","Bubble","BubbleController","Pie","PieController","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","ret","len","hexParse","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_len2","_key2","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","_len","_key","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","categoryPercentage","barPercentage","grouped","_index_","_value_","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","_len11","scaleOptions","_key11","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_fullLoop","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","_args","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","unshift","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref7","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel"],"sourceRoot":""}